@page
@model Shopping.Web.Pages.OrderListModel
@{
    ViewData["Title"] = "Your Orders";
}

<div class="container-fluid px-lg-5 py-4">

    <!-- Hero Section -->
    <section class="bg-white rounded-4 shadow-sm p-4 mb-4">
        <h1 class="display-6 fw-semibold">Your Orders</h1>
        <p class="text-muted">A summary of your recent purchases</p>
    </section>

    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb bg-light px-3 py-2 rounded-3 border-0 mb-4">
            <li class="breadcrumb-item"><a asp-page="Index">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Orders</li>
        </ol>
    </nav>   

    <!-- Orders Table -->
    @if (Model.Orders.Any())
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle shadow-sm rounded-4 overflow-hidden">
                <thead class="text-muted small text-uppercase">
                    <tr class="table-light">
                        <th class="text-center">Image</th>
                        <th>First</th>
                        <th class="d-none d-sm-table-cell">Last</th>
                        <th class="d-none d-md-table-cell">Email</th>
                        <th class="d-none d-lg-table-cell">Address</th>
                        <th class="d-none d-lg-table-cell">Card</th>
                        <th>Status</th>
                        <th class="text-end">Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model.Orders)
                    {
                        <tr class="border-bottom">
                            <td class="text-center">
                                <img src="https://dummyimage.com/50x50/e9ecef/adb5bd.png&text=O"
                                     alt="Avatar"
                                     class="rounded-circle shadow-sm"
                                     width="48" height="48" />
                            </td>
                            <td>@order.ShippingAddress.FirstName</td>
                            <td class="d-none d-sm-table-cell">@order.ShippingAddress.LastName</td>
                            <td class="text-muted small d-none d-md-table-cell text-truncate" style="max-width: 150px;">
                                @order.ShippingAddress.EmailAddress
                            </td>
                            <td class="d-none d-lg-table-cell text-truncate" style="max-width: 200px;">
                                @order.ShippingAddress.AddressLine
                            </td>
                            <td class="d-none d-lg-table-cell">@order.PaymentMethod.CardName</td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(order.Status.ToString()) px-3 py-2 rounded-pill">
                                    @order.Status
                                </span>
                            </td>
                            <td class="text-end fw-bold">
                                @order.OrderItems.Sum(x => x.Price * x.Quantity).ToString("F2") $
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="bg-white text-center rounded-4 py-5 shadow-sm">
            <i class="fa fa-box-open fa-3x text-muted mb-3"></i>
            <h4 class="fw-semibold">No orders yet</h4>
            <p class="text-muted">When you place orders, they’ll appear here.</p>
        </div>
    }

    <!-- Continue Shopping -->
    <div class="text-center mt-4">
        <a asp-page="ProductList" class="btn btn-outline-dark rounded-pill text-white px-4 py-2">
            <i class="fa fa-arrow-left me-2"></i> Continue Shopping
        </a>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status.ToLowerInvariant() switch
        {
            "pending" => "bg-warning text-dark",
            "shipped" => "bg-info text-white",
            "delivered" => "bg-success text-white",
            "cancelled" => "bg-danger text-white",
            _ => "bg-secondary text-white"
        };
    }
}
